<Window x:Class="Calculator7.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calculator7"
        mc:Ignorable="d"
        Title="MainWindow" DataContext="{Binding Source={StaticResource vmMain}}" Height="847" Width="460" Background="{x:Null}" WindowStartupLocation="CenterScreen" WindowStyle="None" Foreground="{x:Null}" ResizeMode="NoResize">
    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="40,40,40,40" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="40,40,40,40">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="30,30,30,30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>
        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="40,40,40,40">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background4" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border4" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background4" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border4" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background4" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border4" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background4" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border4" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground4" Color="#FF838383"/>
        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual4}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background4}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border4}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="10,10,10,10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border4}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border4}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border4}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground4}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Storyboard1">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="record">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="309.834"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.043"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="309.834"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.043"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.984"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-6"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Storyboard2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="72"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="377.167"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="72"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="377.167"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-0.667"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-0.667"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="record">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Storyboard3">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="record">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding CopyCommand}" Key="C" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding PasteCommand}" Key="V" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="0" Key="NumPad0"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="1" Key="NumPad1"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="2" Key="NumPad2"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="3" Key="NumPad3"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="4" Key="NumPad4"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="5" Key="NumPad5"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="6" Key="NumPad6"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="7" Key="NumPad7"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="8" Key="NumPad8"/>
        <KeyBinding Command="{Binding ClickCommand}" CommandParameter="9" Key="NumPad9"/>
        <KeyBinding Command="{Binding DotCommand}" CommandParameter="0" Key="OemPeriod"/>
        <KeyBinding Command="{Binding ClickOpCommand}" CommandParameter="+" Key="OemPlus"/>
        <KeyBinding Command="{Binding ClickOpCommand}" CommandParameter="-" Key="OemMinus"/>
        <KeyBinding Command="{Binding ClickOpCommand}" CommandParameter="*" Key="Multiply"/>
        <KeyBinding Command="{Binding ClickOpCommand}" CommandParameter="/" Key="Divide"/>
        <KeyBinding Command="{Binding EqualCommand}" CommandParameter="=" Key="Return"/>
    </Window.InputBindings>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="back">
            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseDown" SourceName="rectangle">
            <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource Storyboard3}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="9*"/>
            <ColumnDefinition Width="106*"/>
        </Grid.ColumnDefinitions>
        <Rectangle HorizontalAlignment="Center" Height="753" VerticalAlignment="Top" Width="390" RadiusX="20" RadiusY="20" Fill="#FFF6F6F6" Margin="35,27,35,0" Grid.ColumnSpan="2"/>
        <Path Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="1" Margin="24,72,0,0" Stroke="#EDEDED" Stretch="Fill" VerticalAlignment="Top" Width="335" Grid.Column="1">
            <Path.Data>
                <PathGeometry Figures="M78,52.5 L412,52.5"/>
            </Path.Data>
        </Path>
        <TextBlock HorizontalAlignment="Left" Height="19" Margin="61,92,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" FontFamily="pretendard" FontWeight="SemiBold" Foreground="#FF6C76CE" FontSize="16" Grid.Column="1"><Run Language="ko-kr" Text="일반계산기"/></TextBlock>
        <TextBlock x:Name ="save" Text="{Binding Save}" HorizontalAlignment="Left" Height="18" Margin="225,140,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="129" FontFamily="pretendard" FontWeight="Regular" Foreground="#FF9D9D9D" FontSize="15" Grid.Column="1" TextAlignment="Right"><Run Language="ko-kr" Block.TextAlignment="Right"/></TextBlock>
        <TextBlock x:Name="Result" Text="{Binding Result}" Height="60" Margin="15,160,50,0" TextWrapping="Wrap" VerticalAlignment="Top" FontFamily="pretendard" FontWeight="Regular" Foreground="#000000" FontSize="50" Grid.Column="1" TextAlignment="Right"/>
        <Border HorizontalAlignment="Center" Margin="35,327,35,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
            <StackPanel Orientation="Vertical" Height="471" Width="390">
                <Border Height="453" Width="391" CornerRadius="41,41,18,18" Background="#6C76CE">
                    <Button Style="{DynamicResource ButtonStyle3}" Content="" Command="{Binding ClickCommand}" CommandParameter="0" HorizontalAlignment="Left" Height="64" Margin="110,366,0,0" VerticalAlignment="Top" Width="151" BorderBrush="#FFF6F6F6" IsCancel="True">
                        <Button.Background>
                            <SolidColorBrush Color="White" Opacity="0.1"/>
                        </Button.Background>
                    </Button>
                </Border>
            </StackPanel>
        </Border>
        <Rectangle HorizontalAlignment="Left" Height="24.63" Margin="306,374,0,0" VerticalAlignment="Top" Width="25.75" Grid.Column="1">
            <Rectangle.Fill>
                <ImageBrush ImageSource="Group 15.png"/>
            </Rectangle.Fill>
        </Rectangle>
        <TextBlock HorizontalAlignment="Left" Height="37" Margin="209,705,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="22" FontSize="36" FontFamily="pretendard" FontWeight="Regular" Foreground="White" Grid.Column="1"><Run Language="ko-kr" Text="0"/></TextBlock>
        <ToggleButton x:Name ="Menu"  HorizontalAlignment="Left" Height="22" Margin="23,90,0,0" VerticalAlignment="Top" Width="23" BorderBrush="{x:Null}" Foreground="{x:Null}" Grid.Column="1">
            <ToggleButton.Background>
                <ImageBrush ImageSource="Frame 3.png"/>
            </ToggleButton.Background>
        </ToggleButton>
        <Grid Width="200" Height="600" Margin="34,176,227,62" Panel.ZIndex="999" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=Menu, FallbackValue=Hidden}" Background="#FF6C76CE" Grid.ColumnSpan="2">

            <Grid.RowDefinitions>
                
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Content="표준" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="0"/>
            <Button Content="공학용" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="1"/>
            <Button Content="그래프" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="2"/>
            <Button Content="프로그래머" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="3"/>
            <Button Content="날짜 계산" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="4"/>
            <Button Content="통화 환율" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="5"/>
            <Button Content="부피" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="6"/>
            <Button Content="길이" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="7"/>
            <Button Content="무게 및 질량" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="8"/>
            <Button Content="온도" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="9"/>
            <Button Content="설정" FontSize="20" FontFamily="pretendard" FontWeight="Regular" Grid.Row="10"/>
        </Grid>
        <Button x:Name="back" Style="{DynamicResource ButtonStyle5}" Content="" HorizontalAlignment="Left" Height="28" Margin="312,87,0,0" VerticalAlignment="Top" Width="42" BorderBrush="{x:Null}" Grid.Column="1">
            <Button.Background>
                <ImageBrush ImageSource="back.png"/>
            </Button.Background>
        </Button>
        <Border HorizontalAlignment="Left" Height="70" Margin="24,351,0,0" VerticalAlignment="Top" Width="70" Grid.Column="1">
            <Button x:Name="c_button" Style="{DynamicResource ButtonStyle1}" Content="C" Command="{Binding ClearCommand}" CommandParameter="Clear" FontFamily="pretendard" Background="White" BorderBrush="{x:Null}" Foreground="#FF6C76CE" FontSize="29" FontWeight="Regular"/>

        </Border>
        <Button Style="{DynamicResource ButtonStyle4}" Content="Back" Command="{Binding BackCommand}" CommandParameter="Back" HorizontalAlignment="Left" Height="65" Margin="289,244,0,0" VerticalAlignment="Top" Width="65" BorderBrush="{x:Null}" Foreground="{x:Null}" Grid.Column="1">
            <Button.Background>
                <ImageBrush ImageSource="Group 5.png"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="CE" Command="{Binding CECommand}" CommandParameter="CE" HorizontalAlignment="Left" Height="70" Margin="109,351,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="%" Command="{Binding PERCommand}" CommandParameter="%" HorizontalAlignment="Left" Height="70" Margin="195,351,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="/" Command="{Binding ClickOpCommand}" CommandParameter="/" HorizontalAlignment="Left" Height="70" Margin="284,351,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="7" Command="{Binding ClickCommand}" CommandParameter="7" HorizontalAlignment="Left" Height="70" Margin="23,436,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="8" Command="{Binding ClickCommand}" CommandParameter="8" HorizontalAlignment="Left" Height="70" Margin="109,436,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="9" Command="{Binding ClickCommand}" CommandParameter="9" HorizontalAlignment="Left" Height="70" Margin="196,436,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="*" Command="{Binding ClickOpCommand}" CommandParameter="*" HorizontalAlignment="Left" Height="70" Margin="284,436,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="36" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="4" Command="{Binding ClickCommand}" CommandParameter="4" HorizontalAlignment="Left" Height="70" Margin="23,520,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="5" Command="{Binding ClickCommand}" CommandParameter="5" HorizontalAlignment="Left" Height="70" Margin="109,520,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="6" Command="{Binding ClickCommand}" CommandParameter="6" HorizontalAlignment="Left" Height="70" Margin="196,520,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="-" Command="{Binding ClickOpCommand}" CommandParameter="-" HorizontalAlignment="Left" Height="70" Margin="284,520,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="1" Command="{Binding ClickCommand}" CommandParameter="1" HorizontalAlignment="Left" Height="70" Margin="23,604,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="2" Command="{Binding ClickCommand}" CommandParameter="2" HorizontalAlignment="Left" Height="70" Margin="109,604,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="3" Command="{Binding ClickCommand}" CommandParameter="3" HorizontalAlignment="Left" Height="70" Margin="196,604,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="+" Command="{Binding ClickOpCommand}" CommandParameter="+" HorizontalAlignment="Left" Height="70" Margin="284,604,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource ButtonStyle2}" Content="." Command="{Binding DotCommand}" CommandParameter="." HorizontalAlignment="Left" Height="70" Margin="23,691,0,0" VerticalAlignment="Top" Width="70" BorderBrush="#FFF6F6F6" Foreground="White" FontFamily="pretendard" FontWeight="Regular" FontSize="29" Grid.Column="1">
            <Button.Background>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Button.Background>
        </Button>
        <Border HorizontalAlignment="Left" Height="70" Margin="285,689,0,0" VerticalAlignment="Top" Width="70" Grid.Column="1">
            <Button Style="{DynamicResource ButtonStyle1}" Content="=" Command="{Binding EqualCommand}" FontFamily="pretendard" Background="White" BorderBrush="{x:Null}" Foreground="#FF6C76CE" FontSize="42" FontWeight="SemiBold"/>
        </Border>
        <Button HorizontalAlignment="Left" Height="16" Command="{Binding ExitCommand}" CommandParameter="exit" Margin="341,45,0,0" VerticalAlignment="Top" Width="16" BorderBrush="{x:Null}" Grid.Column="1">
            <Button.Background>
                <ImageBrush ImageSource="닫기.png"/>
            </Button.Background>
        </Button>
        <Grid x:Name="record" Margin="35,27,35,67" Grid.ColumnSpan="2" Visibility="Hidden">
            <Rectangle x:Name="rectangle" HorizontalAlignment="Left" Height="765" RadiusY="20" RadiusX="20" VerticalAlignment="Top" Width="390" Margin="0,0,0,-12" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
                <Rectangle.Fill>
                    <SolidColorBrush Color="Black" Opacity="0.3"/>
                </Rectangle.Fill>
            </Rectangle>
            <Border x:Name="border" HorizontalAlignment="Left" Height="306" Margin="0,447,0,0" VerticalAlignment="Top" Width="390" CornerRadius="20,20,0,0" Background="#ffffff" RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <TransformGroup x:Name="transformGroup">
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <StackPanel Orientation="Vertical">
                    <Border Background="#6C76CE" Height="46" CornerRadius="20,20,0,0">
                        <TextBlock HorizontalAlignment="Left" Height="26" TextWrapping="Wrap" FontFamily="pretendard" FontWeight="SemiBold" FontSize="20" VerticalAlignment="Top" Width="87" Foreground="White" Margin="17,13,0,0"><Run Text="이전"/><Run Text=" "/><Run Text="기록"/></TextBlock>
                    </Border>
                </StackPanel>
            </Border>
            <Grid x:Name="grid" Margin="20,500,20,10" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <TextBlock HorizontalAlignment="Left" Height="241" TextWrapping="Wrap" FontFamily="pretendard" FontWeight="Medium" FontSize="19" VerticalAlignment="Top" Width="331" Foreground="Black" Margin="1,0,0,0"><Run Text=""/>
                    <ListView Name="HistoryEquation" ItemsSource="{Binding Equations}" Height="220" Width="350"/>
                </TextBlock>
                <!--<TextBlock HorizontalAlignment="Left" Height="26" TextWrapping="Wrap" FontFamily="pretendard" FontWeight="SemiBold" FontSize="19" VerticalAlignment="Top" Width="74.501" Foreground="Black" Margin="250.833,0,0,0"><Run Text="162,500 "/></TextBlock>
                <Path Data="M72.666667,205.33333 L248.16633,205.33333" HorizontalAlignment="Left" Height="1" Margin="0,36.166,0,0" Stretch="Fill" Stroke="#FFEDEDED" VerticalAlignment="Top" Width="333"/> -->
            </Grid>



        </Grid>


        <!--<Border HorizontalAlignment="Left" Height="296" Margin="35,73,0,0" VerticalAlignment="Top" Width="174" CornerRadius="20,20,20,20" Background="#ffffff" >
            <StackPanel Orientation="Vertical">
                <Border Background="#6C76CE" Height="53" CornerRadius="12,12,0,0">
                    <TextBlock HorizontalAlignment="Left" Height="25.5" Margin="27,20,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="129" FontFamily="pretendard" FontWeight="SemiBold" Foreground="#ffffff" FontSize="20" Text="메뉴"/>
                </Border>
                <Rectangle HorizontalAlignment="Left" Height="24" Margin="20,18,0,0" VerticalAlignment="Top" Width="24">
                    <Rectangle.Fill>
                        <ImageBrush ImageSource="calculate_24dp_5F6368_FILL0_wght400_GRAD0_opsz24 1.png"/>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBlock HorizontalAlignment="Left" Height="18" Margin="50,-21,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="71" FontFamily="pretendard" FontWeight="SemiBold" Foreground="#6C76CE" FontSize="15" Text="일반계산기"/>
                <Path Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="1" Margin="16,12,0,0" Stroke="#EDEDED" Stretch="Fill" VerticalAlignment="Top" Width="144">
                    <Path.Data>
                        <PathGeometry Figures="M78,52.5 L412,52.5"/>
                    </Path.Data>
                </Path>
                <Rectangle HorizontalAlignment="Left" Height="24" Margin="20,18,0,0" VerticalAlignment="Top" Width="24">
                    <Rectangle.Fill>
                        <ImageBrush ImageSource="experiment_24dp_5F6368_FILL0_wght400_GRAD0_opsz24 1.png"/>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBlock HorizontalAlignment="Left" Height="18" Margin="50,-21,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="46.333" FontFamily="pretendard" FontWeight="Medium" Foreground="#FF858585" FontSize="15" Text="공학용"/>
                <Path Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="1" Margin="16,12,0,0" Stroke="#EDEDED" Stretch="Fill" VerticalAlignment="Top" Width="144">
                    <Path.Data>
                        <PathGeometry Figures="M78,52.5 L412,52.5"/>
                    </Path.Data>
                </Path>
            </StackPanel>



        </Border>-->



    </Grid>
</Window>
